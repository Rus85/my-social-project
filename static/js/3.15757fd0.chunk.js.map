{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/ProfileInfo/images/main.jpg","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","like","MyPosts","postsElement","posts","reverse","map","p","id","likesCount","postsBlock","initialValues","newPostBody","onSubmit","values","addPost","validate","e","errors","length","handleSubmit","submitting","pristine","form","name","render","input","meta","placeholder","touched","error","type","disabled","MyPostsContainer","connect","state","newPostText","profilePage","dispatch","addNewPost","addPostActionCreator","React","Component","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descrriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.15757fd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__fbDBo\",\"posts\":\"MyPosts_posts__3ycec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2eQkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descrriptionBlock\":\"ProfileInfo_descrriptionBlock__3GXow\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n\r\n    <div className={s.item}>\r\n      <img src='https://image.freepik.com/free-vector/businessman-profile-cartoon_18591-58479.jpg' />\r\n      {props.message}\r\n\r\n      <div>\r\n        <span>like</span>\r\n        {props.like}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElement =\r\n    [...props.posts]\r\n    .reverse().map(p => <Post id={p.id} like={p.likesCount} key={p.id} message={p.message} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let addPost = () => {\r\n    props.addPost();\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  }\r\n\r\n  const validate = (e) => {\r\n    const errors = {}\r\n\r\n    if (e.newPostBody && e.newPostBody.length < 5) {\r\n      errors.newPostBody = 'too short message'\r\n    }\r\n    return errors\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My news</h3>\r\n\r\n      <Form\r\n        initialValues={{ newPostBody: '' }}\r\n        onSubmit={addNewPost}\r\n        validate={validate}>\r\n\r\n          {({ handleSubmit, pristine, form, submitting }) => (\r\n\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n              <Field\r\n                name=\"newPostBody\"\r\n                 render={({input, meta}) => (\r\n                   <div>\r\n                     <textarea {...input} placeholder='' />\r\n                     {meta.touched && meta.error && <div>{meta.error}</div>}\r\n                </div>\r\n                )}\r\n                />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" disabled={submitting}>Submit</button>\r\n            </div>\r\n\r\n          </form>\r\n        )}\r\n      </Form>\r\n\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\n// import StoreContext from '../../../StoreContext';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (addNewPost) => {\r\n      dispatch(addPostActionCreator(addNewPost))\r\n    },\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/main.86022e16.jpg\";","import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        \r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status) {\r\n        this.setState({\r\n            status: this.props.status\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n    render() {\r\n        \r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}> {this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}> {props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onChangeStatus} autoFocus={true} onBlur={deActivateEditMode} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks","import s from './ProfileInfo.module.css';\r\nimport main from './images/main.jpg'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {/* <img src={main} /> */}\r\n            </div>\r\n            <div className={s.descrriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n                \r\n                                   \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n// import { updateNewPostText } from '../../Redux/state';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport MyPostsContainer from './MyPosts/MyPostContainer';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from '../Profile';\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../../redux/profile-reducer'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n       \r\n       let userId = this.props.match.params.userId\r\n\r\n       if (!userId) {\r\n           userId = this.props.authorizedUserId\r\n          \r\n       }\r\n   \r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n   }\r\n\r\n    render() {\r\n       \r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n    \r\n    \r\n})\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n) \r\n\r\n(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}